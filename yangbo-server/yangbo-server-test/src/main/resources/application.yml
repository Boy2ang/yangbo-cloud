server:
  port: 8202

spring:
  # 链路追踪相关
  zipkin:
    sender:
      # 指定了使用RabbitMQ收集追踪信息
      type: rabbit
    sleuth:
      sampler:
        # 默认值为0.1，即采样率才1/10，发送10笔请求只有一笔会被采集。为了测试方便，我们可以将它设置为1，即100%采样;
        probability: 1
    rabbitmq:
      host: localhost
      # 15672是RabbitMQ的管理页面端口，5672是AMPQ端口。
      port: 5672
      username: yangbo
      password: 123456

  application:
    name: YangBo-Server-Test

  # admin监控
  boot:
    admin:
      client:
        url: http://localhost:8401
        # admin监控服务端的用户名和密码
        username: yangbo
        password: 123456
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8001

  #由于引用了common的mybatis-plus-boot-starter和动态数据源会自动装配，这儿不需要需要手动关闭
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration,org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

security:
  oauth2:
    resource:
      id: ${spring.application.name}
      user-info-uri: http://localhost:8301/auth/user

feign:
  hystrix:
    # 开启熔断机制，feign发生异常时fallback生效
    enabled: true

hystrix:
  # 配置把SecurityContext对象从你当前主线程传输到Hystrix线程;让feign拦截器顺利获取令牌
  shareSecurityContext: true

# 监控相关
info:
  app:
    name: ${spring.application.name}
    description: "@project.description@"
    version: "@project.version@"


# 监控相关
management:
  endpoints:
    web:
      exposure:
        # 表示将SpringBootAdmin客户端的所有监控端点都暴露给SBA服务端
        include: '*'
  endpoint:
    health:
      # 表示总是展示详细的健康信息
      show-details: ALWAYS